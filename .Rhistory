pivot_plot <- PivotTable$new()
pivot_plot$addData(ofsted_filtered)
pivot_plot$addColumnDataGroups("Previous.full.inspection.overall.effectiveness")
pivot_plot$addRowDataGroups("Overall.effectiveness")
pivot_plot$defineCalculation(calculationName = "Count", summariseExpression="n()")
pivot_plot$renderPivot()
view(pivot_plot)
pivot_plot
pp <- tibble(pivot_plot)
Ofsted_outcomes_summed <- ofsted_filtered %>%
group_by(Previous.full.inspection.overall.effectiveness, Overall.effectiveness) %>%
summarise()
Ofsted_outcomes_summed <- ofsted_filtered %>%
group_by(Previous.full.inspection.overall.effectiveness, Overall.effectiveness)# %>%
# summarise()
Ofsted_outcomes_summed <- ofsted_filtered %>%
group_by(Previous.full.inspection.overall.effectiveness, Overall.effectiveness)# %>%
# summarise()
view(Ofsted_outcomes_summed)
Ofsted_outcomes_summed <- ofsted_filtered %>%
group_by(Previous.full.inspection.overall.effectiveness, Overall.effectiveness) %>%
summarise(n())
view(Ofsted_outcomes_summed)
ggplot(Ofsted_outcomes_summed) +
geom_bar(mapping = aes(x = "Previous.full.inspection.overall.effectiveness", fill = "Overall.effectiveness"))
ggplot(Ofsted_outcomes_summed) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness))
ggplot(Ofsted_outcomes_summed) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, y = n(), fill = Overall.effectiveness))
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness))
# Essentially the same code as the previous chart but just a small addition to change to a proportion view
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness), position = "Fill")
warks_filtered <- filter(ofsted_filtered, Local.authority = "Warwickshire")
warks_filtered <- filter(ofsted_filtered, Local.authority == "Warwickshire")
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness), position = "Fill")
ggplot(warks_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness), position = "Fill")
ofsted_not_improved <- filter(ofsted_filtered, Overall.effectiveness <= Previous.full.inspection.overall.effectiveness)
view(ofsted_not_improved)
ofsted_not_improved <- filter(ofsted_filtered, Overall.effectiveness < Previous.full.inspection.overall.effectiveness)
view(ofsted_not_improved)
ofsted_not_improved <- filter(ofsted_filtered, Previous.full.inspection.overall.effectiveness <= Overall.effectiveness)
view(ofsted_not_improved)
summary(ofsted_not_improved)
mutate(ofsted_not_improved, prev_out = ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness))
view(ofsted_not_improved)
# summary(ofsted_not_improved)
# mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness))
view(ofsted_not_improved)
# summary(ofsted_not_improved)
# mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.number(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved
view(ofsted_not_improved)
# summary(ofsted_not_improved)
# mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overall.effectiveness == "NULL",-1,Overall.effectiveness)))
ofsted_not_improved
view(ofsted_not_improved)
# summary(ofsted_not_improved)
# mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overall.effectiveness == "NULL",-1,Overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, IDACI = as.integer(ifelse(The.income.deprivation.affecting.children.index.(IDACI).quintile == "NULL",-1,The.income.deprivation.affecting.children.index.(IDACI).quintile)))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overall.effectiveness == "NULL",-1,Overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, IDACI = as.integer(ifelse(The.income.deprivation.affecting.children.index./(IDACI/).quintile == "NULL",-1,The.income.deprivation.affecting.children.index./(IDACI/).quintile)))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overall.effectiveness == "NULL",-1,Overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, IDACI = as.integer(ifelse(The.income.deprivation.affecting.children.index.\(IDACI\).quintile == "NULL",-1,The.income.deprivation.affecting.children.index.\(IDACI\).quintile)))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overall.effectiveness == "NULL",-1,Overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, IDACI = as.integer(ifelse(The.income.deprivation.affecting.children.index.\\(IDACI\\).quintile == "NULL",-1,The.income.deprivation.affecting.children.index.\\(IDACI\\).quintile)))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overall.effectiveness == "NULL",-1,Overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, IDACI = as.integer(ifelse(The.income.deprivation.affecting.children.index.\(IDACI\).quintile == "NULL",-1,The.income.deprivation.affecting.children.index.\(IDACI\).quintile)))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overall.effectiveness == "NULL",-1,Overall.effectiveness)))
colnames(ofsted_not_improved) <- str_replace_all(colnames(ofsted_not_improved),"[:punct:]|[:space:]","")
# ofsted_not_improved <- mutate(ofsted_not_improved, IDACI = as.integer(ifelse(The.income.deprivation.affecting.children.index.\(IDACI\).quintile == "NULL",-1,The.income.deprivation.affecting.children.index.\(IDACI\).quintile)))
view(ofsted_not_improved)
# summary(ofsted_not_improved)
# mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0))
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previous.full.inspection.overall.effectiveness == "NULL",-1,Previous.full.inspection.overall.effectiveness)))
# The IDACI part had () as part of the name and that was causing a lot of issues so the following piece of code goes through all the column names of the dataframe and removes punctuation and spaces.
colnames(ofsted_not_improved) <- str_replace_all(colnames(ofsted_not_improved),"[:punct:]|[:space:]","")
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previousfullinspectionoveralleffectiveness == "NULL", -1, Previousfullinspectionoveralleffectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overalleffectiveness == "NULL", -1, Overalleffectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, IDACI = as.integer(ifelse(TheincomedeprivationaffectingchildrenindexIDACIquintile == "NULL", -1, TheincomedeprivationaffectingchildrenindexIDACIquintile)))
view(ofsted_not_improved)
# summary(ofsted_not_improved)
# mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0))
# The IDACI part had () as part of the name and that was causing a lot of issues so the following piece of code goes through all the column names of the dataframe and removes punctuation and spaces.
colnames(ofsted_not_improved) <- str_replace_all(colnames(ofsted_not_improved),"[:punct:]|[:space:]","")
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previousfullinspectionoveralleffectiveness == "NULL", -1, Previousfullinspectionoveralleffectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, num_pupils = as.integer(ifelse(Totalnumberofpupils == "NULL", -1, Totalnumberofpupils)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(openxlsx)
library(stringr)
library(pivottabler)
# The data I need is on the 10th sheet and I'm also interested in dates. Also the top row is not the header row for the sheet, hence the different start row.
ofsted <- read.xlsx("data/Management_information_-_state-funded_schools_-_as_at_31_August_2020.xlsx", sheet = 10, startRow = 2, detectDates = TRUE)
# The data I need is on the 10th sheet and I'm also interested in dates. Also the top row is not the header row for the sheet, hence the different start row.
ofsted <- read.xlsx("data/Management_information_-_state-funded_schools_-_as_at_31_August_2020.xlsx", sheet = 10, startRow = 2, detectDates = TRUE)
edubase <- read.csv("data/edubasealldata20200921.csv")
edubase_to_ofsted <- select(mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0)),URN,Easting,Northing,Academy)
#This could likely be done within the ofsted data itself and I will attempt this after matching the data together
ofsted <- left_join(x = ofsted, y = edubase_to_ofsted, x.URN = y.URN)
(ofsted_filtered <- filter(ofsted, Previous.full.inspection.overall.effectiveness != "NULL"))
ofsted_not_improved <- filter(ofsted_filtered, Previous.full.inspection.overall.effectiveness <= Overall.effectiveness)
view(ofsted_not_improved)
# The IDACI part had () as part of the name and that was causing a lot of issues so the following piece of code goes through all the column names of the dataframe and removes punctuation and spaces.
colnames(ofsted_not_improved) <- str_replace_all(colnames(ofsted_not_improved),"[:punct:]|[:space:]","")
ofsted_not_improved <- mutate(ofsted_not_improved, prev_out = as.integer(ifelse(Previousfullinspectionoveralleffectiveness == "NULL", -1, Previousfullinspectionoveralleffectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, current_out = as.integer(ifelse(Overalleffectiveness == "NULL", -1, Overalleffectiveness)))
ofsted_not_improved <- mutate(ofsted_not_improved, IDACI = as.integer(ifelse(TheincomedeprivationaffectingchildrenindexIDACIquintile == "NULL", -1, TheincomedeprivationaffectingchildrenindexIDACIquintile)))
ofsted_not_improved <- mutate(ofsted_not_improved, num_pupils = as.integer(ifelse(Totalnumberofpupils == "NULL", -1, Totalnumberofpupils)))
view(ofsted_not_improved)
ofsted_not_improved %>%
logit <- glm(current_out ~ prev_out, IDACI, Totalnumberofpupils, as.factor(Ofstedphase)) %>%
summary(logit)
logit <- glm(current_out ~ prev_out+IDACI+Totalnumberofpupils, data=ofsted_not_improved, family = "binomial")
ofsted_not_improved$prev_out <- as.factor(ofsted_not_improved$prev_out)
logit <- glm(current_out ~ prev_out+IDACI+Totalnumberofpupils, data = ofsted_not_improved, family = "binomial")
ofsted_not_improved <- filter(ofsted_not_improved, prev_out != -1 & current_out != -1 & IDACI != -1 & num_pupils != -1)
ofsted_not_improved$prev_out <- as.factor(ofsted_not_improved$prev_out)
logit <- glm(current_out ~ prev_out+IDACI+Totalnumberofpupils, data = ofsted_not_improved, family = "binomial")
logit <- glm(current_out ~ prev_out+IDACI+Totalnumberofpupils, data = ofsted_not_improved, family = "binomial")
ofsted_not_improved <- mutate(ofsted_not_improved, pos_out = ifelse(current_out <= 2,1,0))
View(ofsted_not_improved)
ofsted_not_improved$prev_out <- as.factor(ofsted_not_improved$prev_out)
logit <- glm(pos_out ~ current_out, data = ofsted_not_improved, family = "binomial")
summary(logit)
ofsted_not_improved$prev_out <- as.factor(ofsted_not_improved$prev_out)
logit <- glm(pos_out ~ prev_out + IDACI + num_pupils, data = ofsted_not_improved, family = "binomial")
summary(logit)
ofsted_not_improved$prev_out <- as.factor(ofsted_not_improved$prev_out)
ofsted_not_improved$Ofstedphase <- as.factor(ofsted_not_improved$Ofstedphase)
logit <- glm(pos_out ~ prev_out + IDACI + Academy + Ofstedphase, data = ofsted_not_improved, family = "binomial")
summary(logit)
View(ofsted_not_improved)
ggplot(ofsted_not_improved) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), position = "Jitter")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(openxlsx)
library(stringr)
library(pivottabler)
# The data I need is on the 10th sheet and I'm also interested in dates. Also the top row is not the header row for the sheet, hence the different start row.
ofsted <- read.xlsx("data/Management_information_-_state-funded_schools_-_as_at_31_August_2020.xlsx", sheet = 10, startRow = 2, detectDates = TRUE)
edubase <- read.csv("data/edubasealldata20200921.csv")
edubase_to_ofsted <- select(mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0)),URN,Easting,Northing,Academy)
#This could likely be done within the ofsted data itself and I will attempt this after matching the data together
ofsted <- left_join(x = ofsted, y = edubase_to_ofsted, x.URN = y.URN)
(ofsted_filtered <- filter(ofsted, Previous.full.inspection.overall.effectiveness != "NULL"))
ofsted_not_improved <- filter(ofsted_filtered, Previous.full.inspection.overall.effectiveness <= Overall.effectiveness)
view(ofsted_not_improved)
ofsted_not_improved <- filter(ofsted_filtered, Previous.full.inspection.overall.effectiveness <= Overall.effectiveness)
ggplot(ofsted_not_improved) +
geom_point(mapping = aes(x = Previous.full.inspection.overall.effectiveness, y = Overall.effectiveness), position = "Jitter")
view(ofsted_not_improved)
# The IDACI part had () as part of the name and that was causing a lot of issues so the following piece of code goes through all the column names of the dataframe and removes punctuation and spaces.
colnames(ofsted_filtered) <- str_replace_all(colnames(ofsted_filtered),"[:punct:]|[:space:]","")
ofsted_filtered <- mutate(ofsted_filtered, prev_out = as.integer(ifelse(Previousfullinspectionoveralleffectiveness == "NULL", -1, Previousfullinspectionoveralleffectiveness)))
ofsted_filtered <- mutate(ofsted_filtered, current_out = as.integer(ifelse(Overalleffectiveness == "NULL", -1, Overalleffectiveness)))
ofsted_filtered <- mutate(ofsted_filtered, IDACI = as.integer(ifelse(TheincomedeprivationaffectingchildrenindexIDACIquintile == "NULL", -1, TheincomedeprivationaffectingchildrenindexIDACIquintile)))
ofsted_filtered <- mutate(ofsted_filtered, num_pupils = as.integer(ifelse(Totalnumberofpupils == "NULL", -1, Totalnumberofpupils)))
ofsted_filtered_reg <- filter(ofsted_filtered, prev_out != -1 & current_out != -1 & IDACI != -1 & num_pupils != -1)
ofsted_filtered_reg <- mutate(ofsted_filtered_reg, pos_out = ifelse(current_out - prev_out <= 0,1,0))
view(ofsted_filtered_reg)
ofsted_filtered_reg$prev_out <- as.factor(ofsted_not_improved$prev_out)
ofsted_filtered_reg$prev_out <- as.factor(ofsted_filtered_reg$prev_out)
ofsted_filtered_reg$Ofstedphase <- as.factor(ofsted_filtered_reg$Ofstedphase)
logit <- glm(pos_out ~ prev_out + IDACI + Academy + Ofstedphase, data = ofsted_filtered_reg, family = "binomial")
summary(logit)
ofsted_filtered_reg <- filter(ofsted_filtered, prev_out != -1 & current_out != -1 & IDACI != -1 & num_pupils != -1)
ofsted_filtered_reg <- mutate(ofsted_filtered_reg, pos_out = ifelse(current_out - prev_out <= 0,1,0))
# ofsted_filtered_reg$prev_out <- as.factor(ofsted_filtered_reg$prev_out)
ofsted_filtered_reg$Ofstedphase <- as.factor(ofsted_filtered_reg$Ofstedphase)
logit <- glm(pos_out ~ prev_out + IDACI + Academy + Ofstedphase, data = ofsted_filtered_reg, family = "binomial")
summary(logit)
ggplot(ofsted_filtered_reg) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), position = "Jitter")
ggplot(ofsted_filtered_reg) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), position = "Jitter") +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), color = "blue")
ggplot(ofsted_filtered_reg) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), position = "Jitter") +
ggplot(filter(ofsted_filtered_reg, pos_outcome == 1)) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), color = "blue")
ggplot(ofsted_filtered_reg) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), position = "Jitter")
ggplot(filter(ofsted_filtered_reg, pos_outcome == 1)) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), color = "blue")
ggplot(ofsted_filtered_reg) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), position = "Jitter")
temp <- filter(ofsted_filtered_reg, pos_outcome == 1)
ggplot(ofsted_filtered_reg) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), position = "Jitter")
temp <- filter(ofsted_filtered_reg, pos_out == 1)
ggplot(temp) +
geom_point(mapping = aes(x = Previousfullinspectionoveralleffectiveness, y = Overalleffectiveness), color = "blue")
View(logit)
View(logit)
edubase_to_ofsted <- select(mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0)),URN,Easting,Northing,Academy,"DistrictAdministrative (code)","DistrictAdministrative (name)","LSOA (name)","LSOA (code)")
View(edubase)
edubase_to_ofsted <- select(mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0)),URN,Easting,Northing,Academy,DistrictAdministrative..code.,DistrictAdministrative..name.,LSOA..name.,LSOA..code.)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(openxlsx)
library(stringr)
library(pivottabler)
library(tidyverse)
library(openxlsx)
library(stringr)
library(pivottabler)
# The data I need is on the 10th sheet and I'm also interested in dates. Also the top row is not the header row for the sheet, hence the different start row.
ofsted <- read.xlsx("data/Management_information_-_state-funded_schools_-_as_at_31_August_2020.xlsx", sheet = 10, startRow = 2, detectDates = TRUE)
edubase <- read.csv("data/edubasealldata20200921.csv")
edubase_to_ofsted <- select(mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0)),URN,Easting,Northing,Academy,DistrictAdministrative..code.,DistrictAdministrative..name.,LSOA..name.,LSOA..code.)
#This could likely be done within the ofsted data itself and I will attempt this after matching the data together
ofsted <- left_join(x = ofsted, y = edubase_to_ofsted, x.URN = y.URN)
ofsted <- mutate(ofsted, LA.Code = as.integer(substr(LAESTAB,1,3)))
view(ofsted)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(openxlsx)
library(stringr)
library(pivottabler)
# The data I need is on the 10th sheet and I'm also interested in dates. Also the top row is not the header row for the sheet, hence the different start row.
ofsted <- read.xlsx("data/Management_information_-_state-funded_schools_-_as_at_31_August_2020.xlsx", sheet = 10, startRow = 2, detectDates = TRUE)
edubase <- read.csv("data/edubasealldata20200921.csv")
edubase_to_ofsted <- select(mutate(edubase, Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0)),URN,Easting,Northing,Academy,DistrictAdministrative..code.,DistrictAdministrative..name.,LSOA..name.,LSOA..code.)
#This could likely be done within the ofsted data itself and I will attempt this after matching the data together
ofsted <- left_join(x = ofsted, y = edubase_to_ofsted, x.URN = y.URN)
ofsted <- mutate(ofsted, LA.Code = as.integer(substr(LAESTAB,1,3)))
view(ofsted)
(ofsted_filtered <- filter(ofsted, Previous.full.inspection.overall.effectiveness != "NULL"))
# If we're lucky we'll get an idea of the trend now
ggplot(ofsted_filtered) +
geom_point(mapping = aes(x = Previous.full.inspection.overall.effectiveness, y = Overall.effectiveness), position = "Jitter")
Ofsted_outcomes_summed <- ofsted_filtered %>%
group_by(Previous.full.inspection.overall.effectiveness, Overall.effectiveness) %>%
summarise(n())
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness))
# Essentially the same code as the previous chart but just a small addition to change to a proportion view
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness), position = "Fill")
warks_filtered <- filter(ofsted_filtered, Local.authority == "Warwickshire")
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness), position = "Fill")
ggplot(warks_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness), position = "Fill")
ofsted_not_improved <- filter(ofsted_filtered, Previous.full.inspection.overall.effectiveness <= Overall.effectiveness)
view(ofsted_not_improved)
# The IDACI part had () as part of the name and that was causing a lot of issues so the following piece of code goes through all the column names of the dataframe and removes punctuation and spaces.
colnames(ofsted_filtered) <- str_replace_all(colnames(ofsted_filtered),"[:punct:]|[:space:]","")
ofsted_filtered <- mutate(ofsted_filtered, prev_out = as.integer(ifelse(Previousfullinspectionoveralleffectiveness == "NULL", -1, Previousfullinspectionoveralleffectiveness)))
ofsted_filtered <- mutate(ofsted_filtered, current_out = as.integer(ifelse(Overalleffectiveness == "NULL", -1, Overalleffectiveness)))
ofsted_filtered <- mutate(ofsted_filtered, IDACI = as.integer(ifelse(TheincomedeprivationaffectingchildrenindexIDACIquintile == "NULL", -1, TheincomedeprivationaffectingchildrenindexIDACIquintile)))
ofsted_filtered <- mutate(ofsted_filtered, num_pupils = as.integer(ifelse(Totalnumberofpupils == "NULL", -1, Totalnumberofpupils)))
ofsted_filtered_reg <- filter(ofsted_filtered, prev_out != -1 & current_out != -1 & IDACI != -1 & num_pupils != -1)
ofsted_filtered_reg <- mutate(ofsted_filtered_reg, pos_out = ifelse(current_out - prev_out <= 0,1,0))
view(ofsted_filtered_reg)
# ofsted_filtered_reg$prev_out <- as.factor(ofsted_filtered_reg$prev_out)
ofsted_filtered_reg$Ofstedphase <- as.factor(ofsted_filtered_reg$Ofstedphase)
logit <- glm(pos_out ~ prev_out + IDACI + Academy + Ofstedphase, data = ofsted_filtered_reg, family = "binomial")
summary(logit)
View(Ofsted_outcomes_summed)
install.packages("devtools", dependencies = TRUE)
library(devtools)
git config --global user.name "andrewcartledge"
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(openxlsx)
library(stringr)
library(pivottabler)
library(devtools)
# The data I need is on the 10th sheet and I'm also interested in dates. Also the top row is not the header row for the sheet, hence the different start row.
?read.xlsx
ofsted <- read.xlsx("data/Management_information_-_state-funded_schools_-_as_at_31_August_2020.xlsx", sheet = 10, startRow = 2, detectDates = TRUE, na.strings = "NULL")
View(ofsted)
# The data I need is on the 10th sheet and I'm also interested in dates. Also the top row is not the header row for the sheet, hence the different start row.
ofsted <- read.xlsx("data/Management_information_-_state-funded_schools_-_as_at_31_August_2020.xlsx", sheet = 10, startRow = 2, detectDates = TRUE, na.strings = "NULL")
edubase <- read_csv("data/edubasealldata20200921.csv")
# The data I need is on the 10th sheet and I'm also interested in dates. Also the top row is not the header row for the sheet, hence the different start row.
ofsted <- read.xlsx(
"data/Management_information_-_state-funded_schools_-_as_at_31_August_2020.xlsx",
sheet = 10,
startRow = 2,
detectDates = TRUE,
na.strings = "NULL"
)
edubase <- read_csv(
"data/edubasealldata20200921.csv",
guess_max = 10000
)
View(edubase)
edubase
problems(edubase)
edubase <- read_csv(
"data/edubasealldata20200921.csv",
col_types = col_skip("SEN13", "FEHEIdentifier")
guess_max = 10000
edubase <- read_csv(
"data/edubasealldata20200921.csv",
col_types = c("SEN13" = col_skip(), "FEHEIdentifier" = col_skip())
guess_max = 10000
edubase <- read_csv(
"data/edubasealldata20200921.csv",
col_types = c(SEN13 = col_skip(), FEHEIdentifier = col_skip())
guess_max = 10000
edubase <- read_csv(
"data/edubasealldata20200921.csv",
col_types = cols(SEN13 = col_skip(), FEHEIdentifier = col_skip())
guess_max = 10000
edubase <- read_csv(
"data/edubasealldata20200921.csv",
col_types = cols(SEN13 = col_skip(), FEHEIdentifier = col_skip()),
guess_max = 10000
)
edubase <- read_csv(
"data/edubasealldata20200921.csv",
col_types = cols(`SEN13 (name)` = col_skip(), FEHEIdentifier = col_skip()),
guess_max = 10000
)
problems(edubase)
edubase <- read_csv(
"data/edubasealldata20200921.csv",
col_types = cols(`SEN13 (name)` = col_skip(), FEHEIdentifier = col_skip(), InspectorateReport = col_skip(), DateOfLastInspectionVisit = col_skip()),
guess_max = 10000
)
edubase <- read_csv(
"data/edubasealldata20200921.csv",
col_types = cols(`SEN13 (name)` = col_skip(), FEHEIdentifier = col_skip(), InspectorateReport = col_skip(), DateOfLastInspectionVisit = col_skip(), SiteName = col_skip()),
guess_max = 10000
)
edubase_to_ofsted <- select(
mutate(
edubase,
Academy = ifelse(EstablishmentTypeGroup..code. == 10 | EstablishmentTypeGroup..code. == 11,1,0)),
URN,
Easting,
Northing,
Academy,
DistrictAdministrative..code.,
DistrictAdministrative..name.,
LSOA..name.,
LSOA..code.)
edubase_to_ofsted <- select(
mutate(
edubase,
Academy = ifelse(`EstablishmentTypeGroup (code)` == 10 | `EstablishmentTypeGroup (code)` == 11,1,0)),
URN,
Easting,
Northing,
Academy,
`DistrictAdministrative (code)`,
`DistrictAdministrative (name)`,
`LSOA (name)`,
`LSOA (code)`
)
#This could likely be done within the ofsted data itself and I will attempt this after matching the data together
ofsted <- left_join(x = ofsted, y = edubase_to_ofsted, x.URN = y.URN)
ofsted <- mutate(ofsted, LA.Code = as.integer(substr(LAESTAB,1,3)))
view(ofsted)
Ofsted_outcomes_summed <- ofsted_filtered %>%
group_by(Previous.full.inspection.overall.effectiveness, Overall.effectiveness) %>%
summarise(n())
(ofsted_filtered <- filter(ofsted, Previous.full.inspection.overall.effectiveness != NA))
View(ofsted)
(ofsted_filtered <- filter(ofsted, !is.na(Previous.full.inspection.overall.effectiveness)))
Ofsted_outcomes_summed <- ofsted_filtered %>%
group_by(Previous.full.inspection.overall.effectiveness, Overall.effectiveness) %>%
summarise(n())
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness))
# This isn't going to work!
ggplot(ofsted_filtered) +
geom_point(mapping = aes(x = Previous.full.inspection.overall.effectiveness, y = Overall.effectiveness))
# If we're lucky we'll get an idea of the trend now
ggplot(ofsted_filtered) +
geom_point(mapping = aes(x = Previous.full.inspection.overall.effectiveness, y = Overall.effectiveness), position = "Jitter")
Ofsted_outcomes_summed <- ofsted_filtered %>%
group_by(Previous.full.inspection.overall.effectiveness, Overall.effectiveness) %>%
summarise(n())
View(Ofsted_outcomes_summed)
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness))
View(ofsted)
View(ofsted_filtered)
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, color = Overall.effectiveness))
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, color = as_string(Overall.effectiveness)))
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, color = toString(Overall.effectiveness)))
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, color = as.character(Overall.effectiveness)))
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = as.character(Overall.effectiveness)))
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = as.character(Overall.effectiveness)), position = "Fill")
warks_filtered <- filter(ofsted_filtered, Local.authority == "Warwickshire")
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness), position = "Fill")
ggplot(warks_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = Overall.effectiveness), position = "Fill")
# FACET THIS!!!!!!
ggplot(warks_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = as.character(Overall.effectiveness)), position = "Fill")
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness, fill = as.character(Overall.effectiveness)), position = "Fill")
ggplot(ofsted_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness,
fill = as.character(Overall.effectiveness)
),
position = "Fill"
) +
facet_wrap(warks_filtered)
warks_filtered <- mutate(ofsted_filtered, ifelse(Local.authority == "Warwickshire", 1, 0))
warks_filtered <- mutate(ofsted_filtered, WarksSchool = ifelse(Local.authority == "Warwickshire", 1, 0))
ggplot(warks_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness,
fill = as.character(Overall.effectiveness)
),
position = "Fill"
) +
facet_wrap(warks_filtered)
ggplot(warks_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness,
fill = as.character(Overall.effectiveness)
),
position = "Fill"
) +
facet_wrap(~ warks_filtered)
ggplot(warks_filtered) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness,
fill = as.character(Overall.effectiveness)
),
position = "Fill"
) +
facet_wrap(~ WarksSchool)
# ofsted_filtered_reg$prev_out <- as.factor(ofsted_filtered_reg$prev_out)
ofsted_filtered_reg$Ofstedphase <- as.factor(ofsted_filtered_reg$Ofstedphase)
# The IDACI part had () as part of the name and that was causing a lot of issues so the following piece of code goes through all the column names of the dataframe and removes punctuation and spaces. Hopefully this is something that can be done earlier on, possibly when the files are read in at some point.
colnames(ofsted_filtered) <- str_replace_all(colnames(ofsted_filtered),"[:punct:]|[:space:]","")
ofsted_filtered <- mutate(ofsted_filtered, prev_out = as.integer(ifelse(Previousfullinspectionoveralleffectiveness == "NULL", -1, Previousfullinspectionoveralleffectiveness)))
ofsted_filtered <- mutate(ofsted_filtered, current_out = as.integer(ifelse(Overalleffectiveness == "NULL", -1, Overalleffectiveness)))
ofsted_filtered <- mutate(ofsted_filtered, IDACI = as.integer(ifelse(TheincomedeprivationaffectingchildrenindexIDACIquintile == "NULL", -1, TheincomedeprivationaffectingchildrenindexIDACIquintile)))
ofsted_filtered <- mutate(ofsted_filtered, num_pupils = as.integer(ifelse(Totalnumberofpupils == "NULL", -1, Totalnumberofpupils)))
ofsted_filtered_reg <- filter(ofsted_filtered, prev_out != -1 & current_out != -1 & IDACI != -1 & num_pupils != -1)
ofsted_filtered_reg <- mutate(ofsted_filtered_reg, pos_out = ifelse(current_out - prev_out <= 0,1,0))
# ofsted_filtered_reg$prev_out <- as.factor(ofsted_filtered_reg$prev_out)
ofsted_filtered_reg$Ofstedphase <- as.factor(ofsted_filtered_reg$Ofstedphase)
logit <- glm(pos_out ~ prev_out + IDACI + Academy + Ofstedphase, data = ofsted_filtered_reg, family = "binomial")
summary(logit)
# e exponent?
# Tree based regression?
# Git hub repository
warks_filtered <- ofsted_filtered %>%
filter(Local.authority == "Warwickshire")
warks_filtered <- ofsted_filtered %>%
filter(Localauthority == "Warwickshire")
ofsted_filtered_chart <- mutate(ofsted_filtered, plotGroup = "National")
warks_filtered <- mutate(warks_filtered, plotGroup = "Warwickshire")
ofsted_filtered_chart %>%
add_row(warks_filtered)
view(ofsted_filtered_chart)
ofsted_filtered_chart %>%
add_row(warks_filtered)
ofsted_filtered_chart <- ofsted_filtered_chart %>%
add_row(warks_filtered)
view(ofsted_filtered_chart)
ggplot(ofsted_filtered_chart) +
geom_bar(mapping = aes(x = Previous.full.inspection.overall.effectiveness,
fill = as.character(Overall.effectiveness)
),
position = "Fill"
) +
facet_wrap(~ plotGroup)
ggplot(ofsted_filtered_chart) +
geom_bar(mapping = aes(x = Previousfullinspectionoveralleffectiveness,
fill = as.character(Overalleffectiveness)
),
position = "Fill"
) +
facet_wrap(~ plotGroup)
# The IDACI part had () as part of the name and that was causing a lot of issues so the following piece of code goes through all the column names of the dataframe and removes punctuation and spaces. Hopefully this is something that can be done earlier on, possibly when the files are read in at some point.
colnames(ofsted_filtered) <- str_replace_all(colnames(ofsted_filtered),"[:punct:]|[:space:]","")
ofsted_filtered <- mutate(ofsted_filtered, prev_out = as.integer(ifelse(Previousfullinspectionoveralleffectiveness == "NULL", -1, Previousfullinspectionoveralleffectiveness)))
ofsted_filtered <- mutate(ofsted_filtered, current_out = as.integer(ifelse(Overalleffectiveness == "NULL", -1, Overalleffectiveness)))
ofsted_filtered <- mutate(ofsted_filtered, IDACI = as.integer(ifelse(TheincomedeprivationaffectingchildrenindexIDACIquintile == "NULL", -1, TheincomedeprivationaffectingchildrenindexIDACIquintile)))
ofsted_filtered <- mutate(ofsted_filtered, num_pupils = as.integer(ifelse(Totalnumberofpupils == "NULL", -1, Totalnumberofpupils)))
ofsted_filtered_reg <- filter(ofsted_filtered, prev_out != -1 & current_out != -1 & IDACI != -1 & num_pupils != -1)
ofsted_filtered_reg <- mutate(ofsted_filtered_reg, pos_out = ifelse(current_out - prev_out <= 0,1,0))
# ofsted_filtered_reg$prev_out <- as.factor(ofsted_filtered_reg$prev_out)
ofsted_filtered_reg$Ofstedphase <- as.factor(ofsted_filtered_reg$Ofstedphase)
logit <- glm(pos_out ~ prev_out + IDACI + Academy + Ofstedphase, data = ofsted_filtered_reg, family = "binomial")
summary(logit)
# e exponent?
# Tree based regression?
# Git hub repository
